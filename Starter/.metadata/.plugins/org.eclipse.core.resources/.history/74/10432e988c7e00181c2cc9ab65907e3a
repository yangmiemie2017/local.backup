package com.strong.web.controller;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

@RestController
public class UploadController {
	  private static final Logger logger = LoggerFactory.getLogger(UploadController.class);
	  //文件上传相关代码
	  @RequestMapping(value = "upload")
	  @ResponseBody
	  public String upload(@RequestParam("test") MultipartFile file) {
	    if (file.isEmpty()) {
	      return "文件为空";
	    }
	    // 获取文件名
	    String fileName = file.getOriginalFilename();
	    logger.info("上传的文件名为：" + fileName);
	    // 获取文件的后缀名
	    String suffixName = fileName.substring(fileName.lastIndexOf("."));
	    logger.info("上传的后缀名为：" + suffixName);
	    // 文件上传后的路径
	    String filePath = "d://temp//upload//";
	    // 解决中文问题，liunx下中文路径，图片显示问题
	    // fileName = UUID.randomUUID() + suffixName;
	    File dest = new File(filePath + fileName);
	    // 检测是否存在目录
	    if (!dest.getParentFile().exists()) {
	      dest.getParentFile().mkdirs();
	    }
	    try {
	      file.transferTo(dest);
	      return "上传成功";
	    } catch (IllegalStateException e) {
	      e.printStackTrace();
	    } catch (IOException e) {
	      e.printStackTrace();
	    }
	    return "上传失败";
	  }
	 

	  //多文件上传
	  @RequestMapping(value = "/batch/upload", method = RequestMethod.POST)
	  @ResponseBody
	  public String handleFileUpload(HttpServletRequest request) {
	    List<MultipartFile> files = ((MultipartHttpServletRequest) request).getFiles("file");
	    MultipartFile file = null;
	    BufferedOutputStream stream = null;
	    for (int i = 0; i < files.size(); ++i) {
	      file = files.get(i);
	      if (!file.isEmpty()) {
	        try {
	          byte[] bytes = file.getBytes();
	          stream = new BufferedOutputStream(new FileOutputStream(new File(file.getOriginalFilename())));
	          stream.write(bytes);
	          stream.close();
	 
	        } catch (Exception e) {
	          stream = null;
	          return "You failed to upload " + i + " => " + e.getMessage();
	        }
	      } else {
	        return "You failed to upload " + i + " because the file was empty.";
	      }
	    }
	    return "upload successful";
	  }
}
